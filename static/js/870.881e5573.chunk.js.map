{"version":3,"file":"static/js/870.881e5573.chunk.js","mappings":"oKACA,EAA0B,yBAA1B,EAAiE,6BAAjE,EAAyG,0BAAzG,EAA0I,sBAA1I,EAAyK,wBAAzK,EAA4M,0BAA5M,EAA+O,wBAA/O,EAA8Q,sB,mBCW9Q,EATmB,SAACA,GAChB,OACI,0BACI,UAAC,KAAO,CAACC,GAAI,YAAcD,EAAME,GACxBC,UAAW,SAAAC,GAAO,OAAIA,EAAQC,SAAWC,EAAWA,CAAM,EAAC,WAAC,gBAAKC,IAAKP,EAAMQ,IAAKC,IAAI,KAAK,IAAET,EAAMU,SAGvH,ECTA,EAA2B,0BAA3B,EAA+D,yBAA/D,EAAmG,0BCWnG,EAVgB,SAACV,GAEb,OACI,iBAAKG,UAAWG,EAAW,eAAE,gBAAKH,UAAWH,EAAMO,IAAMD,EAAYA,EAAW,SAC3EN,EAAMW,YAInB,E,iDC8CMC,GAAuBC,EAAAA,EAAAA,GAAU,CACnCC,KAAM,YADmBD,EAVL,SAACb,GACrB,OACI,kBAAMe,SAAUf,EAAMgB,aAAa,WAC/B,SAACC,EAAA,EAAK,CAACC,UAAWC,EAAAA,GAAUC,YAAa,cAAeV,KAAM,iBACvDP,UAAWG,EAAYe,SAAU,EAACC,EAAAA,EAAAA,GAAU,MAAMC,EAAAA,EAAAA,GAAU,SACnE,mBAAQpB,UAAWG,EAAS,oBAGxC,IAMA,EAnDgB,SAACN,GAEb,IAAIwB,EAAWxB,EAAMyB,aAAaD,SAASE,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAO,CAAChB,QAASgB,EAAEhB,QAAST,GAAIyB,EAAEzB,GAAeK,IAAKoB,EAAEpB,KAAboB,EAAEzB,GAAiB,IAC/G0B,EAAiB5B,EAAMyB,aAAaI,QAAQH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAU,CAACpB,KAAMoB,EAAEpB,KAAMR,GAAI4B,EAAE5B,GAAeM,IAAKsB,EAAEC,KAAbD,EAAE5B,GAAiB,IAE/G8B,GAAiBC,EAAAA,EAAAA,QAAO,OAM9BC,EAAAA,EAAAA,YAAU,YAJa,WAAO,IAAD,EACH,QAAtB,EAAAF,EAAeG,eAAO,OAAtB,EAAwBC,eAAe,CAACC,SAAU,QACtD,CAGIC,EACJ,GAAG,CAACd,IAMJ,OACI,iBAAKrB,UAAWG,EAAU,WACtB,gBAAKH,UAAWG,EAAc,SACzBsB,KAEL,4BACI,iBAAKzB,UAAWG,EAAW,UACtBkB,GACD,gBAAKe,IAAKP,QAEd,gBAAK7B,UAAWG,EAAO,UACnB,SAACM,EAAoB,CAACG,SAflB,SAACyB,GACjBxC,EAAMyC,WAAWD,EAAOE,eAC5B,WAkBJ,E,oBChCA,GAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KAPkB,SAACC,GACnB,MAAO,CACHpB,aAAcoB,EAAMpB,aAE5B,GAG6B,CAACgB,WAAAA,EAAAA,IAC1BK,EAAAA,EAFJ,CAGEC,E,kJCXEC,EAA6B,SAACH,GAAK,MAAM,CACzCI,OAAQJ,EAAMK,KAAKD,OACtB,EAEYH,EAAmB,SAACK,GAAe,IACtCC,EAAiB,qGAKlB,OALkB,8BACnB,WACI,OAAKC,KAAKrD,MAAMiD,QAET,SAACE,GAAS,UAAKE,KAAKrD,SAFI,SAAC,KAAQ,CAACC,GAAG,UAGhD,KAAC,EALkB,CAASqD,EAAAA,WAUhC,OAAOV,EAAAA,EAAAA,IAAQI,EAARJ,CAAoCQ,EAAmB,C","sources":["webpack://react-01/./src/components/dialogs/Dialogs.module.css?04a9","components/dialogs/DialogItem/DialogItem.jsx","webpack://react-01/./src/components/dialogs/Message/Message.module.css?2c3e","components/dialogs/Message/Message.jsx","components/dialogs/Dialogs.jsx","components/dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__HNmZH\",\"dialogItems\":\"Dialogs_dialogItems__h-XR1\",\"messages\":\"Dialogs_messages__pY53e\",\"item\":\"Dialogs_item__6nb-c\",\"active\":\"Dialogs_active__ovXUa\",\"textarea\":\"Dialogs_textarea__UhN4P\",\"button\":\"Dialogs_button__xkNL8\",\"back\":\"Dialogs_back__DxMKT\"};","import s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div>\r\n            <NavLink to={\"/dialogs/\" + props.id}\r\n                     className={navData => navData.isActive ? s.active : s.item}><img src={props.ava} alt=\"\" /> {props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"Message_messages__7uSF0\",\"message\":\"Message_message__oISuD\",\"outgoing\":\"Message_outgoing__JqdjI\"};","import s from './Message.module.css'\r\n\r\nconst Message = (props) =>{\r\n\r\n    return(\r\n        <div className={s.messages}> <div className={props.src ? s.message : s.outgoing}>\r\n            {props.message}</div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Message;\r\n","import s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport React, {useEffect, useRef} from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/formsControls/formsControls\";\r\nimport {maxLength, required} from \"../../utils/validators/validators\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let messages = props.messagesPage.messages.map(m => <Message message={m.message} id={m.id} key={m.id} src={m.src}/>);\r\n    let dialogsElement = props.messagesPage.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id} ava={d.img}/>);\r\n\r\n    const messagesEndRef = useRef(null)\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView({behavior: \"auto\"})\r\n    }\r\n\r\n    useEffect(() => {\r\n        scrollToBottom()\r\n    }, [messages]);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div>\r\n                <div className={s.messages}>\r\n                    {messages}\r\n                    <div ref={messagesEndRef}/>\r\n                </div>\r\n                <div className={s.back}>\r\n                    <AddMessagesReduxForm onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessagesForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} placeholder={\"New Message\"} name={\"newMessageBody\"}\r\n                   className={s.textarea} validate={[required (\" \"), maxLength(150)]}/>\r\n            <button className={s.button}>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessagesReduxForm = reduxForm({\r\n    form: 'messages'\r\n})(AddMessagesForm)\r\n\r\nexport default Dialogs;\r\n","import {addMessage} from \"../../Redux/messages-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addMessage}),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n","import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login'/>;\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);}"],"names":["props","to","id","className","navData","isActive","s","src","ava","alt","name","message","AddMessagesReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","maxLength","messages","messagesPage","map","m","dialogsElement","dialogs","d","img","messagesEndRef","useRef","useEffect","current","scrollIntoView","behavior","scrollToBottom","ref","values","addMessage","newMessageBody","compose","connect","state","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}